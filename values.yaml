# Default values for zs-postgres-local.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


username: sa
password: welcome
database: testDb
volume:
  enabled: false
  hostPath: /Users/sdas/pgdata
  mountPath: /var/lib/postgresql/data 

image:
  repository: postgres
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest


schema:
  backoffLimit : 5
  setup:
    - name : setup-temporal-database
      image: temporalio/admin-tools
      tag: "1.16.2"
      command:
        - 'sh'
        - '-c'
        - >- 
          env;
          temporal-sql-tool create-database -database temporal; 
          temporal-sql-tool create-database -database temporal_visibility;
          SQL_DATABASE=temporal temporal-sql-tool setup-schema -v 0.0;
          SQL_DATABASE=temporal temporal-sql-tool update -schema-dir schema/postgresql/v96/temporal/versioned;
          SQL_DATABASE=temporal_visibility temporal-sql-tool setup-schema -v 0.0;
          SQL_DATABASE=temporal_visibility temporal-sql-tool update -schema-dir schema/postgresql/v96/visibility/versioned

      env:
        - name: SQL_HOST
          value: '{{ include "zs-postgres-local.fullname" . }}'
        - name: SQL_PORT
          value: "{{ .Values.service.port }}"
        - name: SQL_PLUGIN
          value: "postgres"
        - name: SQL_USER
          value: "{{  .Values.username  }}"
        - name: SQL_PASSWORD
          value: "{{ .Values.password }}"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5432

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
    
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
